/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-10-13 01:43:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.Map;

public final class stasticfiles_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/top.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/echarts.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"main\" class=\"col-sm-6\" style=\"height:400px;\"></div>\r\n");
      out.write("<div id=\"chart2\" class=\"col-sm-6\" style=\"height:400px;\"></div>\r\n");

List<Map> staticResult = (List<Map>)request.getAttribute("staticResult");
Map result = staticResult.get(0);

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    // 基于准备好的dom，初始化echarts实例\r\n");
      out.write("    var myChart = echarts.init(document.getElementById('main'));\r\n");
      out.write("    // 指定图表的配置项和数据\r\n");
      out.write("    myChart.title = '用户文件数量统计';\r\n");
      out.write("\r\n");
      out.write("\toption = {\r\n");
      out.write("\t    color: ['#3398DB'],\r\n");
      out.write("\t    tooltip : {\r\n");
      out.write("\t        trigger: 'axis',\r\n");
      out.write("\t        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n");
      out.write("\t            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n");
      out.write("\t        }\r\n");
      out.write("\t    },\r\n");
      out.write("\t    grid: {\r\n");
      out.write("\t        left: '3%',\r\n");
      out.write("\t        right: '4%',\r\n");
      out.write("\t        bottom: '3%',\r\n");
      out.write("\t        containLabel: true\r\n");
      out.write("\t    },\r\n");
      out.write("\t    xAxis : [\r\n");
      out.write("\t        {\r\n");
      out.write("\t            type : 'category',\r\n");
      out.write("\t            data : ['文本文件','视频文件','图片文件','代码文件','其他'],\r\n");
      out.write("\t            axisTick: {\r\n");
      out.write("\t                alignWithLabel: true\r\n");
      out.write("\t            }\r\n");
      out.write("\t        }\r\n");
      out.write("\t    ],\r\n");
      out.write("\t    yAxis : [\r\n");
      out.write("\t        {\r\n");
      out.write("\t            type : 'value'\r\n");
      out.write("\t        }\r\n");
      out.write("\t    ],\r\n");
      out.write("\t    series : [\r\n");
      out.write("\t        {\r\n");
      out.write("\t            name:'直接访问',\r\n");
      out.write("\t            type:'bar',\r\n");
      out.write("\t            barWidth: '60%',\r\n");
      out.write("\t            data:[");
      out.print(result.get("doc_number"));
      out.write(',');
      out.write(' ');
      out.print(result.get("video_number"));
      out.write(',');
      out.write(' ');
      out.print(result.get("pic_number"));
      out.write("\r\n");
      out.write("\t            , ");
      out.print(result.get("code_number"));
      out.write(',');
      out.write(' ');
      out.print(result.get("other_number"));
      out.write("]\r\n");
      out.write("\t        }\r\n");
      out.write("\t    ]\r\n");
      out.write("\t};\r\n");
      out.write("    // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("    myChart.setOption(option);\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    var pieChart = echarts.init(document.getElementById('chart2'));\r\n");
      out.write("    option2 = {\r\n");
      out.write("    \t    title : {\r\n");
      out.write("    \t        text: '某站点用户访问来源',\r\n");
      out.write("    \t        subtext: '纯属虚构',\r\n");
      out.write("    \t        x:'center'\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    tooltip : {\r\n");
      out.write("    \t        trigger: 'item',\r\n");
      out.write("    \t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    legend: {\r\n");
      out.write("    \t        orient: 'vertical',\r\n");
      out.write("    \t        left: 'left',\r\n");
      out.write("    \t        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    series : [\r\n");
      out.write("    \t        {\r\n");
      out.write("    \t            name: '访问来源',\r\n");
      out.write("    \t            type: 'pie',\r\n");
      out.write("    \t            radius : '55%',\r\n");
      out.write("    \t            center: ['50%', '60%'],\r\n");
      out.write("    \t            data:[\r\n");
      out.write("    \t                {value:335, name:'直接访问'},\r\n");
      out.write("    \t                {value:310, name:'邮件营销'},\r\n");
      out.write("    \t                {value:234, name:'联盟广告'},\r\n");
      out.write("    \t                {value:135, name:'视频广告'},\r\n");
      out.write("    \t                {value:1548, name:'搜索引擎'}\r\n");
      out.write("    \t            ],\r\n");
      out.write("    \t            itemStyle: {\r\n");
      out.write("    \t                emphasis: {\r\n");
      out.write("    \t                    shadowBlur: 10,\r\n");
      out.write("    \t                    shadowOffsetX: 0,\r\n");
      out.write("    \t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("    \t                }\r\n");
      out.write("    \t            }\r\n");
      out.write("    \t        }\r\n");
      out.write("    \t    ]\r\n");
      out.write("    \t};\r\n");
      out.write("    pieChart.setOption(option2);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/bottom.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
